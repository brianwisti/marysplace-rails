site_admin_user:
  login: "site_admin_user"
  password_salt: <%= salt = Authlogic::Random.hex_token %>
  crypted_password: <%= Authlogic::CryptoProviders::SCrypt.encrypt("site_admin_user" + salt) %>
  persistence_token: <%= Authlogic::Random.hex_token %>
  single_access_token: <%= Authlogic::Random.friendly_token %>
  perishable_token: <%= Authlogic::Random.friendly_token %>
  roles: site_admin
basic_user:
  login: "basic_user"
  password_salt: <%= salt = Authlogic::Random.hex_token %>
  crypted_password: <%= Authlogic::CryptoProviders::SCrypt.encrypt("basic_user" + salt) %>
  persistence_token: <%= Authlogic::Random.hex_token %>
  single_access_token: <%= Authlogic::Random.friendly_token %>
  perishable_token: <%= Authlogic::Random.friendly_token %>
admin_user:
  login: "admin_user"
  password_salt: <%= salt = Authlogic::Random.hex_token %>
  crypted_password: <%= Authlogic::CryptoProviders::SCrypt.encrypt("admin_user" + salt) %>
  persistence_token: <%= Authlogic::Random.hex_token %>
  single_access_token: <%= Authlogic::Random.friendly_token %>
  perishable_token: <%= Authlogic::Random.friendly_token %>
  roles: admin
  organization: prime
staff_user:
  login: "staff_user"
  password_salt: <%= salt = Authlogic::Random.hex_token %>
  crypted_password: <%= Authlogic::CryptoProviders::SCrypt.encrypt("staff_user" + salt) %>
  persistence_token: <%= Authlogic::Random.hex_token %>
  single_access_token: <%= Authlogic::Random.friendly_token %>
  perishable_token: <%= Authlogic::Random.friendly_token %>
  roles: staff
  organization: prime
front_desk_user:
  login: "front_desk_user"
  password_salt: <%= salt = Authlogic::Random.hex_token %>
  crypted_password: <%= Authlogic::CryptoProviders::SCrypt.encrypt("front_desk_user" + salt) %>
  persistence_token: <%= Authlogic::Random.hex_token %>
  single_access_token: <%= Authlogic::Random.friendly_token %>
  perishable_token: <%= Authlogic::Random.friendly_token %>
  roles: front_desk
  organization: prime
