- available_roles = [] if available_roles.nil?

= form_for user, role: 'form' do |f|
  - if user.errors.any?
    .error_explanation
      %h2
        = pluralize user.errors.count, "error"
        prevented this user from being saved:
      %ul
        - user.errors.full_messages.each do |msg|
          %li= msg
  .row
    .col-md-6
      .form-group
        = f.label :login
        = f.text_field :login, class: 'form-control'
      .form-group
        = f.label :name
        = f.text_field :name, class: 'form-control'
      .form-group
        = f.label :email
        = f.text_field :email, class: 'form-control'
      .form-group
        - if f.object.new_record?
          = f.label :password
        - else
          = f.label :password, "Change password"
        = f.password_field :password, class: 'form-control'
        = f.label :password_confirmation
        = f.password_field :password_confirmation, class: 'form-control'
    .col-md-6
      .form-group
        = f.label :avatar
        = f.file_field :avatar, class: 'form-control'
        = image_tag user.avatar.url(:square)
      - if can? :manage, Organization
        .form-group
          = f.label :organization
          = f.collection_select :organization_id, Organization.all, :id, :name, { prompt: true }, { class: 'form-control' }
      - if available_roles
        %fieldset
          %legend Roles
          .form-group
            - available_roles.each do |role|
              - input_id = "role_ids_#{role.id}"
              .checkbox-inline
                %label{ for: input_id }
                  %input{ type: "checkbox", id: input_id, name: "role_ids[]", value: role.id, checked: user.roles.include?(role) }
                  = role.name.titleize
  .form-group
    = f.submit class: "btn btn-primary btn-block"
    = cancel_button
